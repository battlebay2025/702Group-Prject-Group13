---
title: "Question3"
author: "Yuxin Lin"
format: pdf
editor: visual
---

```{r}
library(tidymodels)
library(tidyverse)
library(dplyr)
library(lubridate)
```

```{r}
df <- read.csv("Question3.csv")
```

```{r}
#Data Clean
df <- df %>%
  mutate(
    date = as.Date(date, format = "%Y/%m/%d"),   
    year = year(date),                           
    month = month(date),                         
    day = day(date)                              
  )

df_cleaned <- df %>% 
  drop_na(state)
```

```{r}
## Data Visualization
ggplot(df_cleaned, aes(x = date, y = Daily_Infections, color = state, group = state)) +
  geom_line(alpha = 0.8) + # use geom_line() draw trend line
  labs(
    title = "Infection Trend by State in Australia",
    x = "Date",
    y = "Daily Infection",
    color = "State"
  ) +
  theme_minimal() + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1), # Make the X-axis date skewed to prevent overlap
    legend.position = "top" 
  )
```



```{r}
df_cleaned |> ggplot(aes(x = date, y = Daily_Infections )) +
geom_line() + geom_point() +
  scale_x_date(date_labels = "%m-%Y")
```

```{r}
#Use moving average to make forecast
k = 7
df_forecast <- df_cleaned |>
mutate(MA3_prediction = c(
rep(NA, k-1),
ma(Daily_Infections, order = k, centre = FALSE)
)[1:dim(df_cleaned)[1]])

(df_forecast <- df_forecast |>
  mutate(
    Forecast_Error = Daily_Infections - MA3_prediction,
    Absolute_Forecast_Error = abs(Forecast_Error),
    Square_Forecast_Error = Forecast_Error^2,
    Abs_Perc_Error = abs(100*Forecast_Error/Daily_Infections)
  ))
```

```{r}
df_forecast_long <- df_forecast |> pivot_longer(
cols = contains("prediction"),
names_to = "Method",
values_to = "Prediction"
)
print(df_forecast_long, n = 5)
```



```{r}
df_cleaned |> ggplot(aes(x = date, y = Daily_Infections)) +
geom_line() + geom_point() +
geom_line(aes(x = date, y = `Prediction`,
col = Method, group = Method), linewidth = 2,
data = df_forecast_long)
```

